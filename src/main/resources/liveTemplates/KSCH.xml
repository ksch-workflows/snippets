<?xml version="1.0" encoding="UTF-8"?>
<templateSet group="KSCH">
  <template name="toTest" value="// TODO(test): $END$" description="Reminder to create a unit test" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="DART" value="true" />
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="uuid" value="const Uuid().v4()" description="Custom snippet for random UUID" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="testWidgets" value="testWidgets('$END$', (tester) async {&#10;    tester.binding.window.textScaleFactorTestValue = 0.2;&#10;    &#10;    await tester.pumpWidget(const TestBench(&#10;      child: Text('Hello, Widget!'),&#10;      isFullPage: false,&#10;    ));&#10;    &#10;    expect(find.byType(Text), findsWidgets);&#10;});" description="Custom template for widget test" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="link" value="@JsonSerializable()&#10;class $NAME$Link implements Link {&#10;  final String href;&#10;&#10;  $NAME$Link({required this.href});&#10;&#10;  factory $NAME$Link.fromJson(Map&lt;String, dynamic&gt; json) =&gt; _$$$NAME$LinkFromJson(json);&#10;&#10;  Map&lt;String, dynamic&gt; toJson() =&gt; _$$$NAME$LinkToJson(this);&#10;}" description="Add custom link implementation" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>  
</templateSet>
